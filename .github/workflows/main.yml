name: "Main"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    name: "Eslint"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: 'Install dependencies'
        run: 'npm ci --force'

      - name: "Eslint"
        run: "npm run eslint"

  stylelint:
    name: "Stylelint"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install dependencies"
        run: "npm ci --force"

      - name: "Stylelint"
        run: "npm run stylelint"

  prettier:
    name: "Prettier"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install dependencies"
        run: "npm ci --force"

      - name: "Prettier"
        run: "npm run prettier"

  check:
    name: "Svelte Check"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: "npm"

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install dependencies"
        run: "npm ci --force"

      - name: "Svelte Check"
        run: "npm run check"

  test:
    name: "Test"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: "npm"

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install dependencies"
        run: "npm ci --force"

      - name: "Test"
        run: "npm run test -- --ci"

  build:
    name: "Build"
    needs: ["eslint", "prettier", "stylelint", "check", "test"]
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20
          cache: "npm"

      - name: Cache node modules
        id: cache-npm
        uses: 'actions/cache@v4'
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: "Install dependencies"
        run: "npm ci --force"

      - name: "Build"
        run: "npm run build"
