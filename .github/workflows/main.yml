name: "Main"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  eslint:
    name: "Eslint"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Eslint"
        run: "pnpm eslint"

  stylelint:
    name: "Stylelint"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Stylelint"
        run: "pnpm stylelint"

  prettier:
    name: "Prettier"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Prettier"
        run: "pnpm prettier"

  check:
    name: "Svelte Check"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Svelte Check"
        run: "pnpm check"

  test:
    name: "Test"
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Test"
        run: "pnpm test -- --ci"

  build:
    name: "Build"
    needs: ["eslint", "prettier", "stylelint", "check", "test"]
    runs-on: "ubuntu-latest"
    env:
      PUBLIC_STRAPI_URI: "http://localhost"
      PUBLIC_GRAPHQL_URI: "http://localhost/graphql"
      PUBLIC_MAIL_URI: "http://localhost/api/send/mail"
      PUBLIC_MAIL_ACCESS_TOKEN: "XXX"
      PUBLIC_PLATFORM: "dev"
      PUBLIC_RE_CAPTCHA_KEY: "XXX"
    steps:
      - name: "Check out Git repository"
        uses: "actions/checkout@v4"

      - name: "Use Node.js 20"
        uses: "actions/setup-node@v4"
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: "Install dependencies"
        run: "pnpm install --frozen-lockfile"

      - name: "Build"
        run: "pnpm build"
